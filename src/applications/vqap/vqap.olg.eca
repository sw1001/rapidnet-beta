ECA Rule prov_ra_1Eca0Ins ACTION_REMOTE_SEND<esimRep1Temp(@RLOC, Local, Z, X, S, RID, RWeight, R, List)> :- EVENT_INSERT<sim(@Local, Z, X, S)>, PID1 := f_sha1((((sim+ Local)+ Z)+ X)+ S), List := f_append(PID1), RLOC := Local, RWeight := 1, R := ra, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_ra_1Eca0Del ACTION_REMOTE_SEND<esimRep1TempDelete(@RLOC, Local, Z, X, S, RID, RWeight, R, List)> :- EVENT_DELETE<sim(@Local, Z, X, S)>, PID1 := f_sha1((((sim+ Local)+ Z)+ X)+ S), List := f_append(PID1), RLOC := Local, RWeight := 1, R := ra, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_ra_2_ecaAdd ACTION_ADD<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<esimRep1Temp(@RLOC, Local, Z, X, S, RID, RWeight, R, List)>.
ECA Rule prov_ra_2_ecaDel ACTION_DELETE<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<esimRep1TempDelete(@RLOC, Local, Z, X, S, RID, RWeight, R, List)>.
ECA Rule prov_ra_3_ecaAdd ACTION_REMOTE_SEND<esimRep1(@Local, Z, X, S, RID, RWeight, RLOC)> :- EVENT_RECV<esimRep1Temp(@RLOC, Local, Z, X, S, RID, RWeight, R, List)>.
ECA Rule prov_ra_3_ecaDel ACTION_REMOTE_SEND<esimRep1Delete(@Local, Z, X, S, RID, RWeight, RLOC)> :- EVENT_RECV<esimRep1TempDelete(@RLOC, Local, Z, X, S, RID, RWeight, R, List)>.
ECA Rule prov_ra_4_ecaAdd ACTION_ADD<simRep1(@Local, Z, X, S)> :- EVENT_RECV<esimRep1(@Local, Z, X, S, RID, RWeight, RLOC)>.
ECA Rule prov_ra_4_ecaDel ACTION_DELETE<simRep1(@Local, Z, X, S)> :- EVENT_RECV<esimRep1Delete(@Local, Z, X, S, RID, RWeight, RLOC)>.
ECA Rule prov_ra_5_ecaAdd ACTION_ADD<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<esimRep1(@Local, Z, X, S, RID, RWeight, RLOC)>, VID := f_sha1((((simRep1+ Local)+ Z)+ X)+ S), Score := -1.
ECA Rule prov_ra_5_ecaDel ACTION_DELETE<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<esimRep1Delete(@Local, Z, X, S, RID, RWeight, RLOC)>, VID := f_sha1((((simRep1+ Local)+ Z)+ X)+ S), Score := -1.
ECA Rule prov_rb_1Eca0Ins ACTION_REMOTE_SEND<esimRep2Temp(@RLOC, Local, Z, X, S, RID, RWeight, R, List)> :- EVENT_INSERT<sim(@Local, Z, X, S)>, PID1 := f_sha1((((sim+ Local)+ Z)+ X)+ S), List := f_append(PID1), RLOC := Local, RWeight := 1, R := rb, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_rb_1Eca0Del ACTION_REMOTE_SEND<esimRep2TempDelete(@RLOC, Local, Z, X, S, RID, RWeight, R, List)> :- EVENT_DELETE<sim(@Local, Z, X, S)>, PID1 := f_sha1((((sim+ Local)+ Z)+ X)+ S), List := f_append(PID1), RLOC := Local, RWeight := 1, R := rb, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_rb_2_ecaAdd ACTION_ADD<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<esimRep2Temp(@RLOC, Local, Z, X, S, RID, RWeight, R, List)>.
ECA Rule prov_rb_2_ecaDel ACTION_DELETE<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<esimRep2TempDelete(@RLOC, Local, Z, X, S, RID, RWeight, R, List)>.
ECA Rule prov_rb_3_ecaAdd ACTION_REMOTE_SEND<esimRep2(@Local, Z, X, S, RID, RWeight, RLOC)> :- EVENT_RECV<esimRep2Temp(@RLOC, Local, Z, X, S, RID, RWeight, R, List)>.
ECA Rule prov_rb_3_ecaDel ACTION_REMOTE_SEND<esimRep2Delete(@Local, Z, X, S, RID, RWeight, RLOC)> :- EVENT_RECV<esimRep2TempDelete(@RLOC, Local, Z, X, S, RID, RWeight, R, List)>.
ECA Rule prov_rb_4_ecaAdd ACTION_ADD<simRep2(@Local, Z, X, S)> :- EVENT_RECV<esimRep2(@Local, Z, X, S, RID, RWeight, RLOC)>.
ECA Rule prov_rb_4_ecaDel ACTION_DELETE<simRep2(@Local, Z, X, S)> :- EVENT_RECV<esimRep2Delete(@Local, Z, X, S, RID, RWeight, RLOC)>.
ECA Rule prov_rb_5_ecaAdd ACTION_ADD<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<esimRep2(@Local, Z, X, S, RID, RWeight, RLOC)>, VID := f_sha1((((simRep2+ Local)+ Z)+ X)+ S), Score := -1.
ECA Rule prov_rb_5_ecaDel ACTION_DELETE<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<esimRep2Delete(@Local, Z, X, S, RID, RWeight, RLOC)>, VID := f_sha1((((simRep2+ Local)+ Z)+ X)+ S), Score := -1.
ECA Rule prov_r1_1Eca0Ins ACTION_REMOTE_SEND<ehasImgAnsTemp(@RLOC, Local, Z, X, Rln, Y, RID, RWeight, R, List)> :- EVENT_INSERT<word(@Local, Z, S1)>, hasImg(@Local, X, Rln, Y, S2), sim(@Local, Z, X, S3), simRep1(@Local, Z, Y, S4), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasImg+ Local)+ X)+ Rln)+ Y)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1((((sim+ Local)+ Z)+ X)+ S3), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((simRep1+ Local)+ Z)+ Y)+ S4), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_1Eca0Del ACTION_REMOTE_SEND<ehasImgAnsTempDelete(@RLOC, Local, Z, X, Rln, Y, RID, RWeight, R, List)> :- EVENT_DELETE<word(@Local, Z, S1)>, hasImg(@Local, X, Rln, Y, S2), sim(@Local, Z, X, S3), simRep1(@Local, Z, Y, S4), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasImg+ Local)+ X)+ Rln)+ Y)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1((((sim+ Local)+ Z)+ X)+ S3), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((simRep1+ Local)+ Z)+ Y)+ S4), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_1Eca3Ins ACTION_REMOTE_SEND<ehasImgAnsTemp(@RLOC, Local, Z, X, Rln, Y, RID, RWeight, R, List)> :- EVENT_INSERT<hasImg(@Local, X, Rln, Y, S2)>, word(@Local, Z, S1), sim(@Local, Z, X, S3), simRep1(@Local, Z, Y, S4), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasImg+ Local)+ X)+ Rln)+ Y)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1((((sim+ Local)+ Z)+ X)+ S3), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((simRep1+ Local)+ Z)+ Y)+ S4), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_1Eca3Del ACTION_REMOTE_SEND<ehasImgAnsTempDelete(@RLOC, Local, Z, X, Rln, Y, RID, RWeight, R, List)> :- EVENT_DELETE<hasImg(@Local, X, Rln, Y, S2)>, word(@Local, Z, S1), sim(@Local, Z, X, S3), simRep1(@Local, Z, Y, S4), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasImg+ Local)+ X)+ Rln)+ Y)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1((((sim+ Local)+ Z)+ X)+ S3), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((simRep1+ Local)+ Z)+ Y)+ S4), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_1Eca7Ins ACTION_REMOTE_SEND<ehasImgAnsTemp(@RLOC, Local, Z, X, Rln, Y, RID, RWeight, R, List)> :- EVENT_INSERT<sim(@Local, Z, X, S3)>, word(@Local, Z, S1), hasImg(@Local, X, Rln, Y, S2), simRep1(@Local, Z, Y, S4), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasImg+ Local)+ X)+ Rln)+ Y)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1((((sim+ Local)+ Z)+ X)+ S3), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((simRep1+ Local)+ Z)+ Y)+ S4), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_1Eca7Del ACTION_REMOTE_SEND<ehasImgAnsTempDelete(@RLOC, Local, Z, X, Rln, Y, RID, RWeight, R, List)> :- EVENT_DELETE<sim(@Local, Z, X, S3)>, word(@Local, Z, S1), hasImg(@Local, X, Rln, Y, S2), simRep1(@Local, Z, Y, S4), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasImg+ Local)+ X)+ Rln)+ Y)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1((((sim+ Local)+ Z)+ X)+ S3), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((simRep1+ Local)+ Z)+ Y)+ S4), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_1Eca11Ins ACTION_REMOTE_SEND<ehasImgAnsTemp(@RLOC, Local, Z, X, Rln, Y, RID, RWeight, R, List)> :- EVENT_INSERT<simRep1(@Local, Z, Y, S4)>, word(@Local, Z, S1), hasImg(@Local, X, Rln, Y, S2), sim(@Local, Z, X, S3), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasImg+ Local)+ X)+ Rln)+ Y)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1((((sim+ Local)+ Z)+ X)+ S3), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((simRep1+ Local)+ Z)+ Y)+ S4), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_1Eca11Del ACTION_REMOTE_SEND<ehasImgAnsTempDelete(@RLOC, Local, Z, X, Rln, Y, RID, RWeight, R, List)> :- EVENT_DELETE<simRep1(@Local, Z, Y, S4)>, word(@Local, Z, S1), hasImg(@Local, X, Rln, Y, S2), sim(@Local, Z, X, S3), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasImg+ Local)+ X)+ Rln)+ Y)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1((((sim+ Local)+ Z)+ X)+ S3), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((simRep1+ Local)+ Z)+ Y)+ S4), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_2_ecaAdd ACTION_ADD<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<ehasImgAnsTemp(@RLOC, Local, Z, X, Rln, Y, RID, RWeight, R, List)>.
ECA Rule prov_r1_2_ecaDel ACTION_DELETE<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<ehasImgAnsTempDelete(@RLOC, Local, Z, X, Rln, Y, RID, RWeight, R, List)>.
ECA Rule prov_r1_3_ecaAdd ACTION_REMOTE_SEND<ehasImgAns(@Local, Z, X, Rln, Y, RID, RWeight, RLOC)> :- EVENT_RECV<ehasImgAnsTemp(@RLOC, Local, Z, X, Rln, Y, RID, RWeight, R, List)>.
ECA Rule prov_r1_3_ecaDel ACTION_REMOTE_SEND<ehasImgAnsDelete(@Local, Z, X, Rln, Y, RID, RWeight, RLOC)> :- EVENT_RECV<ehasImgAnsTempDelete(@RLOC, Local, Z, X, Rln, Y, RID, RWeight, R, List)>.
ECA Rule prov_r1_4_ecaAdd ACTION_ADD<hasImgAns(@Local, Z, X, Rln, Y)> :- EVENT_RECV<ehasImgAns(@Local, Z, X, Rln, Y, RID, RWeight, RLOC)>.
ECA Rule prov_r1_4_ecaDel ACTION_DELETE<hasImgAns(@Local, Z, X, Rln, Y)> :- EVENT_RECV<ehasImgAnsDelete(@Local, Z, X, Rln, Y, RID, RWeight, RLOC)>.
ECA Rule prov_r1_5_ecaAdd ACTION_ADD<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<ehasImgAns(@Local, Z, X, Rln, Y, RID, RWeight, RLOC)>, VID := f_sha1(((((hasImgAns+ Local)+ Z)+ X)+ Rln)+ Y), Score := -1.
ECA Rule prov_r1_5_ecaDel ACTION_DELETE<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<ehasImgAnsDelete(@Local, Z, X, Rln, Y, RID, RWeight, RLOC)>, VID := f_sha1(((((hasImgAns+ Local)+ Z)+ X)+ Rln)+ Y), Score := -1.
ECA Rule prov_r2_1Eca0Ins ACTION_REMOTE_SEND<ecandidateTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<word(@Local, Z, S)>, PID1 := f_sha1(((word+ Local)+ Z)+ S), List := f_append(PID1), RLOC := Local, RWeight := 1, R := r2, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r2_1Eca0Del ACTION_REMOTE_SEND<ecandidateTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<word(@Local, Z, S)>, PID1 := f_sha1(((word+ Local)+ Z)+ S), List := f_append(PID1), RLOC := Local, RWeight := 1, R := r2, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r2_2_ecaAdd ACTION_ADD<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<ecandidateTemp(@RLOC, Local, Z, RID, RWeight, R, List)>.
ECA Rule prov_r2_2_ecaDel ACTION_DELETE<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<ecandidateTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)>.
ECA Rule prov_r2_3_ecaAdd ACTION_REMOTE_SEND<ecandidate(@Local, Z, RID, RWeight, RLOC)> :- EVENT_RECV<ecandidateTemp(@RLOC, Local, Z, RID, RWeight, R, List)>.
ECA Rule prov_r2_3_ecaDel ACTION_REMOTE_SEND<ecandidateDelete(@Local, Z, RID, RWeight, RLOC)> :- EVENT_RECV<ecandidateTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)>.
ECA Rule prov_r2_4_ecaAdd ACTION_ADD<candidate(@Local, Z)> :- EVENT_RECV<ecandidate(@Local, Z, RID, RWeight, RLOC)>.
ECA Rule prov_r2_4_ecaDel ACTION_DELETE<candidate(@Local, Z)> :- EVENT_RECV<ecandidateDelete(@Local, Z, RID, RWeight, RLOC)>.
ECA Rule prov_r2_5_ecaAdd ACTION_ADD<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<ecandidate(@Local, Z, RID, RWeight, RLOC)>, VID := f_sha1((candidate+ Local)+ Z), Score := -1.
ECA Rule prov_r2_5_ecaDel ACTION_DELETE<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<ecandidateDelete(@Local, Z, RID, RWeight, RLOC)>, VID := f_sha1((candidate+ Local)+ Z), Score := -1.
ECA Rule prov_r3_1Eca0Ins ACTION_REMOTE_SEND<ecandidateTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<word(@Local, Z, S1)>, hasQ(@Local, Y, Rln, X, S2), hasImgAns(@Local, Z, X1, Rln1, Y1), sim(@Local, Rln, Rln1, S3), simRep1(@Local, Y, Y1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ Y)+ Rln)+ X)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((((hasImgAns+ Local)+ Z)+ X1)+ Rln1)+ Y1), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Rln)+ Rln1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Y)+ Y1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1Eca0Del ACTION_REMOTE_SEND<ecandidateTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<word(@Local, Z, S1)>, hasQ(@Local, Y, Rln, X, S2), hasImgAns(@Local, Z, X1, Rln1, Y1), sim(@Local, Rln, Rln1, S3), simRep1(@Local, Y, Y1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ Y)+ Rln)+ X)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((((hasImgAns+ Local)+ Z)+ X1)+ Rln1)+ Y1), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Rln)+ Rln1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Y)+ Y1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1Eca3Ins ACTION_REMOTE_SEND<ecandidateTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<hasQ(@Local, Y, Rln, X, S2)>, word(@Local, Z, S1), hasImgAns(@Local, Z, X1, Rln1, Y1), sim(@Local, Rln, Rln1, S3), simRep1(@Local, Y, Y1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ Y)+ Rln)+ X)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((((hasImgAns+ Local)+ Z)+ X1)+ Rln1)+ Y1), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Rln)+ Rln1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Y)+ Y1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1Eca3Del ACTION_REMOTE_SEND<ecandidateTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<hasQ(@Local, Y, Rln, X, S2)>, word(@Local, Z, S1), hasImgAns(@Local, Z, X1, Rln1, Y1), sim(@Local, Rln, Rln1, S3), simRep1(@Local, Y, Y1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ Y)+ Rln)+ X)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((((hasImgAns+ Local)+ Z)+ X1)+ Rln1)+ Y1), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Rln)+ Rln1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Y)+ Y1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1Eca7Ins ACTION_REMOTE_SEND<ecandidateTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<hasImgAns(@Local, Z, X1, Rln1, Y1)>, word(@Local, Z, S1), hasQ(@Local, Y, Rln, X, S2), sim(@Local, Rln, Rln1, S3), simRep1(@Local, Y, Y1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ Y)+ Rln)+ X)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((((hasImgAns+ Local)+ Z)+ X1)+ Rln1)+ Y1), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Rln)+ Rln1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Y)+ Y1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1Eca7Del ACTION_REMOTE_SEND<ecandidateTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<hasImgAns(@Local, Z, X1, Rln1, Y1)>, word(@Local, Z, S1), hasQ(@Local, Y, Rln, X, S2), sim(@Local, Rln, Rln1, S3), simRep1(@Local, Y, Y1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ Y)+ Rln)+ X)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((((hasImgAns+ Local)+ Z)+ X1)+ Rln1)+ Y1), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Rln)+ Rln1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Y)+ Y1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1Eca11Ins ACTION_REMOTE_SEND<ecandidateTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<sim(@Local, Rln, Rln1, S3)>, word(@Local, Z, S1), hasQ(@Local, Y, Rln, X, S2), hasImgAns(@Local, Z, X1, Rln1, Y1), simRep1(@Local, Y, Y1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ Y)+ Rln)+ X)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((((hasImgAns+ Local)+ Z)+ X1)+ Rln1)+ Y1), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Rln)+ Rln1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Y)+ Y1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1Eca11Del ACTION_REMOTE_SEND<ecandidateTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<sim(@Local, Rln, Rln1, S3)>, word(@Local, Z, S1), hasQ(@Local, Y, Rln, X, S2), hasImgAns(@Local, Z, X1, Rln1, Y1), simRep1(@Local, Y, Y1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ Y)+ Rln)+ X)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((((hasImgAns+ Local)+ Z)+ X1)+ Rln1)+ Y1), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Rln)+ Rln1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Y)+ Y1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1Eca15Ins ACTION_REMOTE_SEND<ecandidateTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<simRep1(@Local, Y, Y1, S4)>, word(@Local, Z, S1), hasQ(@Local, Y, Rln, X, S2), hasImgAns(@Local, Z, X1, Rln1, Y1), sim(@Local, Rln, Rln1, S3), simRep2(@Local, X, X1, S5), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ Y)+ Rln)+ X)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((((hasImgAns+ Local)+ Z)+ X1)+ Rln1)+ Y1), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Rln)+ Rln1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Y)+ Y1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1Eca15Del ACTION_REMOTE_SEND<ecandidateTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<simRep1(@Local, Y, Y1, S4)>, word(@Local, Z, S1), hasQ(@Local, Y, Rln, X, S2), hasImgAns(@Local, Z, X1, Rln1, Y1), sim(@Local, Rln, Rln1, S3), simRep2(@Local, X, X1, S5), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ Y)+ Rln)+ X)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((((hasImgAns+ Local)+ Z)+ X1)+ Rln1)+ Y1), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Rln)+ Rln1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Y)+ Y1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1Eca19Ins ACTION_REMOTE_SEND<ecandidateTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<simRep2(@Local, X, X1, S5)>, word(@Local, Z, S1), hasQ(@Local, Y, Rln, X, S2), hasImgAns(@Local, Z, X1, Rln1, Y1), sim(@Local, Rln, Rln1, S3), simRep1(@Local, Y, Y1, S4), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ Y)+ Rln)+ X)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((((hasImgAns+ Local)+ Z)+ X1)+ Rln1)+ Y1), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Rln)+ Rln1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Y)+ Y1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1Eca19Del ACTION_REMOTE_SEND<ecandidateTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<simRep2(@Local, X, X1, S5)>, word(@Local, Z, S1), hasQ(@Local, Y, Rln, X, S2), hasImgAns(@Local, Z, X1, Rln1, Y1), sim(@Local, Rln, Rln1, S3), simRep1(@Local, Y, Y1, S4), PID1 := f_sha1(((word+ Local)+ Z)+ S1), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ Y)+ Rln)+ X)+ S2), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((((hasImgAns+ Local)+ Z)+ X1)+ Rln1)+ Y1), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Rln)+ Rln1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Y)+ Y1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r4_1Eca0Ins ACTION_REMOTE_SEND<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<candidate(@Local, Z)>, hasQ(@Local, X, Rln, Qtn, S1), hasImg(@Local, Z, Rln, X, S2), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z)+ Rln)+ X)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), RLOC := Local, RWeight := 1, R := r4, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r4_1Eca0Del ACTION_REMOTE_SEND<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<candidate(@Local, Z)>, hasQ(@Local, X, Rln, Qtn, S1), hasImg(@Local, Z, Rln, X, S2), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z)+ Rln)+ X)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), RLOC := Local, RWeight := 1, R := r4, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r4_1Eca3Ins ACTION_REMOTE_SEND<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<hasQ(@Local, X, Rln, Qtn, S1)>, candidate(@Local, Z), hasImg(@Local, Z, Rln, X, S2), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z)+ Rln)+ X)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), RLOC := Local, RWeight := 1, R := r4, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r4_1Eca3Del ACTION_REMOTE_SEND<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<hasQ(@Local, X, Rln, Qtn, S1)>, candidate(@Local, Z), hasImg(@Local, Z, Rln, X, S2), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z)+ Rln)+ X)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), RLOC := Local, RWeight := 1, R := r4, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r4_1Eca8Ins ACTION_REMOTE_SEND<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<hasImg(@Local, Z, Rln, X, S2)>, candidate(@Local, Z), hasQ(@Local, X, Rln, Qtn, S1), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z)+ Rln)+ X)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), RLOC := Local, RWeight := 1, R := r4, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r4_1Eca8Del ACTION_REMOTE_SEND<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<hasImg(@Local, Z, Rln, X, S2)>, candidate(@Local, Z), hasQ(@Local, X, Rln, Qtn, S1), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z)+ Rln)+ X)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), RLOC := Local, RWeight := 1, R := r4, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r4_2_ecaAdd ACTION_ADD<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)>.
ECA Rule prov_r4_2_ecaDel ACTION_DELETE<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)>.
ECA Rule prov_r4_3_ecaAdd ACTION_REMOTE_SEND<eans(@Local, Z, RID, RWeight, RLOC)> :- EVENT_RECV<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)>.
ECA Rule prov_r4_3_ecaDel ACTION_REMOTE_SEND<eansDelete(@Local, Z, RID, RWeight, RLOC)> :- EVENT_RECV<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)>.
ECA Rule prov_r4_4_ecaAdd ACTION_ADD<ans(@Local, Z)> :- EVENT_RECV<eans(@Local, Z, RID, RWeight, RLOC)>.
ECA Rule prov_r4_4_ecaDel ACTION_DELETE<ans(@Local, Z)> :- EVENT_RECV<eansDelete(@Local, Z, RID, RWeight, RLOC)>.
ECA Rule prov_r4_5_ecaAdd ACTION_ADD<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<eans(@Local, Z, RID, RWeight, RLOC)>, VID := f_sha1((ans+ Local)+ Z), Score := -1.
ECA Rule prov_r4_5_ecaDel ACTION_DELETE<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<eansDelete(@Local, Z, RID, RWeight, RLOC)>, VID := f_sha1((ans+ Local)+ Z), Score := -1.
ECA Rule prov_r5_1Eca0Ins ACTION_REMOTE_SEND<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<candidate(@Local, Z)>, hasQ(@Local, X, Rln, Qtn, S1), hasImg(@Local, Z1, Rln, X, S2), sim(@Local, Z, Z1, S3), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln)+ X)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r5, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r5_1Eca0Del ACTION_REMOTE_SEND<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<candidate(@Local, Z)>, hasQ(@Local, X, Rln, Qtn, S1), hasImg(@Local, Z1, Rln, X, S2), sim(@Local, Z, Z1, S3), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln)+ X)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r5, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r5_1Eca3Ins ACTION_REMOTE_SEND<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<hasQ(@Local, X, Rln, Qtn, S1)>, candidate(@Local, Z), hasImg(@Local, Z1, Rln, X, S2), sim(@Local, Z, Z1, S3), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln)+ X)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r5, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r5_1Eca3Del ACTION_REMOTE_SEND<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<hasQ(@Local, X, Rln, Qtn, S1)>, candidate(@Local, Z), hasImg(@Local, Z1, Rln, X, S2), sim(@Local, Z, Z1, S3), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln)+ X)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r5, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r5_1Eca8Ins ACTION_REMOTE_SEND<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<hasImg(@Local, Z1, Rln, X, S2)>, candidate(@Local, Z), hasQ(@Local, X, Rln, Qtn, S1), sim(@Local, Z, Z1, S3), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln)+ X)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r5, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r5_1Eca8Del ACTION_REMOTE_SEND<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<hasImg(@Local, Z1, Rln, X, S2)>, candidate(@Local, Z), hasQ(@Local, X, Rln, Qtn, S1), sim(@Local, Z, Z1, S3), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln)+ X)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r5, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r5_1Eca12Ins ACTION_REMOTE_SEND<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<sim(@Local, Z, Z1, S3)>, candidate(@Local, Z), hasQ(@Local, X, Rln, Qtn, S1), hasImg(@Local, Z1, Rln, X, S2), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln)+ X)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r5, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r5_1Eca12Del ACTION_REMOTE_SEND<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<sim(@Local, Z, Z1, S3)>, candidate(@Local, Z), hasQ(@Local, X, Rln, Qtn, S1), hasImg(@Local, Z1, Rln, X, S2), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln)+ X)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Local, RWeight := 1, R := r5, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_1Eca0Ins ACTION_REMOTE_SEND<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<candidate(@Local, Z)>, hasQ(@Local, X, Rln, Qtn, S1), hasImg(@Local, Z1, Rln1, X1, S2), sim(@Local, Z, Z1, S3), simRep1(@Local, Rln, Rln1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln1)+ X1)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Rln)+ Rln1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r6, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_1Eca0Del ACTION_REMOTE_SEND<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<candidate(@Local, Z)>, hasQ(@Local, X, Rln, Qtn, S1), hasImg(@Local, Z1, Rln1, X1, S2), sim(@Local, Z, Z1, S3), simRep1(@Local, Rln, Rln1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln1)+ X1)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Rln)+ Rln1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r6, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_1Eca3Ins ACTION_REMOTE_SEND<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<hasQ(@Local, X, Rln, Qtn, S1)>, candidate(@Local, Z), hasImg(@Local, Z1, Rln1, X1, S2), sim(@Local, Z, Z1, S3), simRep1(@Local, Rln, Rln1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln1)+ X1)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Rln)+ Rln1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r6, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_1Eca3Del ACTION_REMOTE_SEND<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<hasQ(@Local, X, Rln, Qtn, S1)>, candidate(@Local, Z), hasImg(@Local, Z1, Rln1, X1, S2), sim(@Local, Z, Z1, S3), simRep1(@Local, Rln, Rln1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln1)+ X1)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Rln)+ Rln1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r6, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_1Eca8Ins ACTION_REMOTE_SEND<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<hasImg(@Local, Z1, Rln1, X1, S2)>, candidate(@Local, Z), hasQ(@Local, X, Rln, Qtn, S1), sim(@Local, Z, Z1, S3), simRep1(@Local, Rln, Rln1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln1)+ X1)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Rln)+ Rln1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r6, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_1Eca8Del ACTION_REMOTE_SEND<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<hasImg(@Local, Z1, Rln1, X1, S2)>, candidate(@Local, Z), hasQ(@Local, X, Rln, Qtn, S1), sim(@Local, Z, Z1, S3), simRep1(@Local, Rln, Rln1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln1)+ X1)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Rln)+ Rln1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r6, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_1Eca12Ins ACTION_REMOTE_SEND<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<sim(@Local, Z, Z1, S3)>, candidate(@Local, Z), hasQ(@Local, X, Rln, Qtn, S1), hasImg(@Local, Z1, Rln1, X1, S2), simRep1(@Local, Rln, Rln1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln1)+ X1)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Rln)+ Rln1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r6, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_1Eca12Del ACTION_REMOTE_SEND<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<sim(@Local, Z, Z1, S3)>, candidate(@Local, Z), hasQ(@Local, X, Rln, Qtn, S1), hasImg(@Local, Z1, Rln1, X1, S2), simRep1(@Local, Rln, Rln1, S4), simRep2(@Local, X, X1, S5), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln1)+ X1)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Rln)+ Rln1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r6, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_1Eca16Ins ACTION_REMOTE_SEND<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<simRep1(@Local, Rln, Rln1, S4)>, candidate(@Local, Z), hasQ(@Local, X, Rln, Qtn, S1), hasImg(@Local, Z1, Rln1, X1, S2), sim(@Local, Z, Z1, S3), simRep2(@Local, X, X1, S5), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln1)+ X1)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Rln)+ Rln1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r6, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_1Eca16Del ACTION_REMOTE_SEND<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<simRep1(@Local, Rln, Rln1, S4)>, candidate(@Local, Z), hasQ(@Local, X, Rln, Qtn, S1), hasImg(@Local, Z1, Rln1, X1, S2), sim(@Local, Z, Z1, S3), simRep2(@Local, X, X1, S5), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln1)+ X1)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Rln)+ Rln1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r6, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_1Eca20Ins ACTION_REMOTE_SEND<eansTemp(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_INSERT<simRep2(@Local, X, X1, S5)>, candidate(@Local, Z), hasQ(@Local, X, Rln, Qtn, S1), hasImg(@Local, Z1, Rln1, X1, S2), sim(@Local, Z, Z1, S3), simRep1(@Local, Rln, Rln1, S4), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln1)+ X1)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Rln)+ Rln1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r6, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_1Eca20Del ACTION_REMOTE_SEND<eansTempDelete(@RLOC, Local, Z, RID, RWeight, R, List)> :- EVENT_DELETE<simRep2(@Local, X, X1, S5)>, candidate(@Local, Z), hasQ(@Local, X, Rln, Qtn, S1), hasImg(@Local, Z1, Rln1, X1, S2), sim(@Local, Z, Z1, S3), simRep1(@Local, Rln, Rln1, S4), PID1 := f_sha1((candidate+ Local)+ Z), List := f_append(PID1), PID2 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Qtn)+ S1), List2 := f_append(PID2), List := f_concat(List, List2), Qtn == WHAT, PID3 := f_sha1(((((hasImg+ Local)+ Z1)+ Rln1)+ X1)+ S2), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((((sim+ Local)+ Z)+ Z1)+ S3), List4 := f_append(PID4), List := f_concat(List, List4), PID5 := f_sha1((((simRep1+ Local)+ Rln)+ Rln1)+ S4), List5 := f_append(PID5), List := f_concat(List, List5), PID6 := f_sha1((((simRep2+ Local)+ X)+ X1)+ S5), List6 := f_append(PID6), List := f_concat(List, List6), RLOC := Local, RWeight := 1, R := r6, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r7_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<word(@Local, W, S)>, PID1 := f_sha1(((word+ Local)+ W)+ S), List := f_append(PID1), VID := f_sha1(((word+ Local)+ W)+ S), Name := word, Content := (Name+ W)+ S, RLOC := Local, RWeight := 1, R := r7, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r7_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<word(@Local, W, S)>, PID1 := f_sha1(((word+ Local)+ W)+ S), List := f_append(PID1), VID := f_sha1(((word+ Local)+ W)+ S), Name := word, Content := (Name+ W)+ S, RLOC := Local, RWeight := 1, R := r7, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r7_2_ecaAdd ACTION_ADD<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)>.
ECA Rule prov_r7_2_ecaDel ACTION_DELETE<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)>.
ECA Rule prov_r7_3_ecaAdd ACTION_REMOTE_SEND<eshaResult(@Local, VID, Content, RID, RWeight, RLOC)> :- EVENT_RECV<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)>.
ECA Rule prov_r7_3_ecaDel ACTION_REMOTE_SEND<eshaResultDelete(@Local, VID, Content, RID, RWeight, RLOC)> :- EVENT_RECV<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)>.
ECA Rule prov_r7_4_ecaAdd ACTION_ADD<shaResult(@Local, VID, Content)> :- EVENT_RECV<eshaResult(@Local, VID, Content, RID, RWeight, RLOC)>.
ECA Rule prov_r7_4_ecaDel ACTION_DELETE<shaResult(@Local, VID, Content)> :- EVENT_RECV<eshaResultDelete(@Local, VID, Content, RID, RWeight, RLOC)>.
ECA Rule prov_r7_5_ecaAdd ACTION_ADD<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<eshaResult(@Local, VID, Content, RID, RWeight, RLOC)>, VID := f_sha1(((shaResult+ Local)+ VID)+ Content), Score := -1.
ECA Rule prov_r7_5_ecaDel ACTION_DELETE<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<eshaResultDelete(@Local, VID, Content, RID, RWeight, RLOC)>, VID := f_sha1(((shaResult+ Local)+ VID)+ Content), Score := -1.
ECA Rule prov_r8_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<hasImg(@Local, X, Rln, Y, S)>, PID1 := f_sha1(((((hasImg+ Local)+ X)+ Rln)+ Y)+ S), List := f_append(PID1), VID := f_sha1(((((hasImg+ Local)+ X)+ Rln)+ Y)+ S), Name := hasImg, Content := (((Name+ X)+ Rln)+ Y)+ S, RLOC := Local, RWeight := 1, R := r8, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r8_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<hasImg(@Local, X, Rln, Y, S)>, PID1 := f_sha1(((((hasImg+ Local)+ X)+ Rln)+ Y)+ S), List := f_append(PID1), VID := f_sha1(((((hasImg+ Local)+ X)+ Rln)+ Y)+ S), Name := hasImg, Content := (((Name+ X)+ Rln)+ Y)+ S, RLOC := Local, RWeight := 1, R := r8, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r9_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<hasQ(@Local, X, Rln, Y, S)>, PID1 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Y)+ S), List := f_append(PID1), VID := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Y)+ S), Name := hasQ, Content := (((Name+ X)+ Rln)+ Y)+ S, RLOC := Local, RWeight := 1, R := r9, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r9_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<hasQ(@Local, X, Rln, Y, S)>, PID1 := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Y)+ S), List := f_append(PID1), VID := f_sha1(((((hasQ+ Local)+ X)+ Rln)+ Y)+ S), Name := hasQ, Content := (((Name+ X)+ Rln)+ Y)+ S, RLOC := Local, RWeight := 1, R := r9, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r10_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<sim(@Local, X, Y, S)>, PID1 := f_sha1((((sim+ Local)+ X)+ Y)+ S), List := f_append(PID1), VID := f_sha1((((sim+ Local)+ X)+ Y)+ S), Name := sim, Content := ((Name+ X)+ Y)+ S, RLOC := Local, RWeight := 1, R := r10, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r10_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<sim(@Local, X, Y, S)>, PID1 := f_sha1((((sim+ Local)+ X)+ Y)+ S), List := f_append(PID1), VID := f_sha1((((sim+ Local)+ X)+ Y)+ S), Name := sim, Content := ((Name+ X)+ Y)+ S, RLOC := Local, RWeight := 1, R := r10, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r11_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<simRep1(@Local, X, Y, S)>, PID1 := f_sha1((((simRep1+ Local)+ X)+ Y)+ S), List := f_append(PID1), VID := f_sha1((((simRep1+ Local)+ X)+ Y)+ S), Name := simRep1, Content := ((Name+ X)+ Y)+ S, RLOC := Local, RWeight := 1, R := r11, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r11_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<simRep1(@Local, X, Y, S)>, PID1 := f_sha1((((simRep1+ Local)+ X)+ Y)+ S), List := f_append(PID1), VID := f_sha1((((simRep1+ Local)+ X)+ Y)+ S), Name := simRep1, Content := ((Name+ X)+ Y)+ S, RLOC := Local, RWeight := 1, R := r11, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r12_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<simRep2(@Local, X, Y, S)>, PID1 := f_sha1((((simRep2+ Local)+ X)+ Y)+ S), List := f_append(PID1), VID := f_sha1((((simRep2+ Local)+ X)+ Y)+ S), Name := simRep2, Content := ((Name+ X)+ Y)+ S, RLOC := Local, RWeight := 1, R := r12, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r12_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<simRep2(@Local, X, Y, S)>, PID1 := f_sha1((((simRep2+ Local)+ X)+ Y)+ S), List := f_append(PID1), VID := f_sha1((((simRep2+ Local)+ X)+ Y)+ S), Name := simRep2, Content := ((Name+ X)+ Y)+ S, RLOC := Local, RWeight := 1, R := r12, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_edb_1Eca1Ins ACTION_ADD<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_INSERT<hasImg(@Local, X, Rln, Y, S2)>, RLoc := Local, VID := f_sha1(((((hasImg+ Local)+ X)+ Rln)+ Y)+ S2), RID := VID, Score := S2.
ECA Rule prov_edb_1Eca1Del ACTION_DELETE<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_DELETE<hasImg(@Local, X, Rln, Y, S2)>, RLoc := Local, VID := f_sha1(((((hasImg+ Local)+ X)+ Rln)+ Y)+ S2), RID := VID, Score := S2.
ECA Rule prov_edb_2Eca1Ins ACTION_ADD<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_INSERT<hasQ(@Local, Y, Rln, X, S2)>, RLoc := Local, VID := f_sha1(((((hasQ+ Local)+ Y)+ Rln)+ X)+ S2), RID := VID, Score := S2.
ECA Rule prov_edb_2Eca1Del ACTION_DELETE<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_DELETE<hasQ(@Local, Y, Rln, X, S2)>, RLoc := Local, VID := f_sha1(((((hasQ+ Local)+ Y)+ Rln)+ X)+ S2), RID := VID, Score := S2.
ECA Rule prov_edb_3Eca1Ins ACTION_ADD<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_INSERT<sim(@Local, Z, X, S)>, RLoc := Local, VID := f_sha1((((sim+ Local)+ Z)+ X)+ S), RID := VID, Score := S.
ECA Rule prov_edb_3Eca1Del ACTION_DELETE<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_DELETE<sim(@Local, Z, X, S)>, RLoc := Local, VID := f_sha1((((sim+ Local)+ Z)+ X)+ S), RID := VID, Score := S.
ECA Rule prov_edb_4Eca1Ins ACTION_ADD<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_INSERT<word(@Local, Z, S1)>, RLoc := Local, VID := f_sha1(((word+ Local)+ Z)+ S1), RID := VID, Score := S1.
ECA Rule prov_edb_4Eca1Del ACTION_DELETE<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_DELETE<word(@Local, Z, S1)>, RLoc := Local, VID := f_sha1(((word+ Local)+ Z)+ S1), RID := VID, Score := S1.
ECA Rule edb1_eca ACTION_REMOTE_SEND<pReturn(@Ret, QID, VID, Prov)> :- EVENT_RECV<provQuery(@X, QID, VID, P, Ret)>, prov(@X, VID, RID, RLoc, Score), shaResult(@X, VID, Content), RID == VID, Prov := Content.
ECA Rule idb1a_eca ACTION_ADD<pQList(@X, QID, P, LIST< RID >)> :- EVENT_RECV<provQuery(@X, QID, VID, P, Ret)>, prov(@X, VID, RID, RLoc, Score), RID != VID, f_member(P, VID) == 0.
ECA Rule idb1b_eca ACTION_REMOTE_SEND<pReturn(@Ret, QID, VID, Prov)> :- EVENT_RECV<provQuery(@X, QID, VID, P, Ret)>, shaResult(@X, VID, Content), f_member(P, VID) > 0, Prov := Content.
ECA Rule idb2_eca ACTION_ADD<pResultTmp(@X, QID, Ret, VID, Buf)> :- EVENT_RECV<provQuery(@X, QID, VID, P, Ret)>, Buf := f_empty(), f_member(P, VID) == 0.
ECA Rule idb3_eca ACTION_LOCAL_SEND<pIterate(@X, QID, N, Ret)> :- EVENT_RECV<provQuery(@X, QID, VID, P, Ret)>, N := 1.
ECA Rule idb4_eca ACTION_LOCAL_SEND<pIterate(@X, QID, N, Ret)> :- EVENT_RECV<pIterate(@X, QID, N1, Ret)>, pQList(@X, QID, P, List), N1 < f_size(List), N := N1+ 1.
ECA Rule idb5_eca ACTION_LOCAL_SEND<eRuleQuery(@X, NQID, QID, RID, P, Ret)> :- EVENT_RECV<pIterate(@X, QID, N, Ret)>, pQList(@X, QID, P, List), N <= f_size(List), RID := f_item(List, N), NQID := f_sha1((+ QID)+ RID).
ECA Rule idb6a_eca ACTION_REMOTE_SEND<ruleQuery(@RLoc, QID, RID, P, X)> :- EVENT_RECV<eRuleQuery(@X, QID, OQID, RID, P1, Ret)>, prov(@X, VID, RID, RLoc, Score), P2 := f_append(VID), P := f_concat(P1, P2).
ECA Rule idb7_eca ACTION_ADD<pResultTmp(@X, QID, Ret, VID, Buf)> :- EVENT_RECV<rReturn(@X, NQID, RID, Prov)>, pResultTmp(@X, QID, Ret, VID, Buf1), NQID == f_sha1((+ QID)+ RID), Buf2 := f_append(Prov), Buf := f_concat(Buf1, Buf2).
ECA Rule idb8Eca0Ins ACTION_LOCAL_SEND<ePReturn(@X, QID)> :- EVENT_INSERT<pResultTmp(@X, QID, Ret, VID, Buf)>, pQList(@X, QID, P, List), f_size(Buf) == f_size(List), f_size(Buf) != 0.
ECA Rule idb8Eca1Ins ACTION_LOCAL_SEND<ePReturn(@X, QID)> :- EVENT_INSERT<pQList(@X, QID, P, List)>, pResultTmp(@X, QID, Ret, VID, Buf), f_size(Buf) == f_size(List), f_size(Buf) != 0.
ECA Rule idb9_eca ACTION_REMOTE_SEND<pReturn(@Ret, QID, VID, Prov)> :- EVENT_RECV<ePReturn(@X, QID)>, pResultTmp(@X, QID, Ret, VID, Buf), Prov := f_pIDB(Buf, X).
ECA Rule rv1_eca ACTION_ADD<rQList(@X, QID, List, P)> :- EVENT_RECV<ruleQuery(@X, QID, RID, P, Ret)>, ruleExec(@X, RID, RWeight, R, List).
ECA Rule rv2_eca ACTION_ADD<rResultTmp(@X, QID, Ret, RID, Buf)> :- EVENT_RECV<ruleQuery(@X, QID, RID, P, Ret)>, Buf := f_empty().
ECA Rule rv3_eca ACTION_LOCAL_SEND<rIterate(@X, QID, N)> :- EVENT_RECV<ruleQuery(@X, QID, RID, P, Ret)>, N := 1.
ECA Rule rv4_eca ACTION_LOCAL_SEND<rIterate(@X, QID, N)> :- EVENT_RECV<rIterate(@X, QID, N1)>, rQList(@X, QID, List, P), N1 < f_size(List), N := N1+ 1.
ECA Rule rv5_eca ACTION_LOCAL_SEND<eProvQuery(@X, NQID, VID, P)> :- EVENT_RECV<rIterate(@X, QID, N)>, rQList(@X, QID, List, P), VID := f_item(List, N), NQID := f_sha1((+ QID)+ VID).
ECA Rule rv6_eca ACTION_LOCAL_SEND<provQuery(@X, QID, VID, P, $1)> :- EVENT_RECV<eProvQuery(@X, QID, VID, P)>, $1 := X.
ECA Rule rv7_eca ACTION_ADD<rResultTmp(@X, QID, Ret, RID, Buf)> :- EVENT_RECV<pReturn(@X, NQID, VID, Prov)>, rResultTmp(@X, QID, Ret, RID, Buf1), NQID == f_sha1((+ QID)+ VID), Buf2 := f_append(Prov), Buf := f_concat(Buf1, Buf2).
ECA Rule rv8Eca0Ins ACTION_LOCAL_SEND<eRReturn(@X, QID)> :- EVENT_INSERT<rResultTmp(@X, QID, Ret, RID, Buf)>, rQList(@X, QID, List, P), f_size(Buf) == f_size(List).
ECA Rule rv8Eca1Ins ACTION_LOCAL_SEND<eRReturn(@X, QID)> :- EVENT_INSERT<rQList(@X, QID, List, P)>, rResultTmp(@X, QID, Ret, RID, Buf), f_size(Buf) == f_size(List).
ECA Rule rv9_eca ACTION_REMOTE_SEND<rReturn(@Ret, QID, RID, Prov)> :- EVENT_RECV<eRReturn(@X, QID)>, rResultTmp(@X, QID, Ret, RID, Buf), ruleExec(@X, RID, RWeight, R, List), Prov := f_pRULE(Buf, X, R, RWeight).
